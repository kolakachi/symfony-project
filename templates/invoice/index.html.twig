{% extends 'base.html.twig' %}

{% block title %}Hello InvoiceController!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper container" id="app">
    <div class="row">
            <h3 class="mt-5 mb-5"></h3>
            <div class="col-md-12">
                <div class="row mb-3">
                    <table class="table table-striped table-dark">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Invoice Date</th>
                                <th scope="col">Invoice Number</th>
                                <th scope="col">Customer Id</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(invoice, index) in invoices">
                                <th scope="row">${ invoice.id }</th>
                                <td>${ invoice.invoice_date }</td>
                                <td>${ invoice.invoice_number }</td>
                                <td>${ invoice.customer_id }</td>
                                <td>
                                <a :href="'/edit/'+ invoice.id" class="btn btn-light">Edit</a>
                                    <button @click="deleteInvoice(index)" class="btn btn-danger">Trash</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    

</div>
    <textarea style="display:none;" id="invoices"> {{ data}}</textarea>

{% endblock %}
{% block scripts %}
<script>

    new Vue({
        delimiters: ['${', '}'],
        el: "#app",
        data : {
            invoices: [],
        },
        mounted() {
            this.invoices = JSON.parse($("#invoices").val());
        },
        methods: {
            deleteInvoice(index){
                let invoice = Object.assign({}, this.invoices[index]);

                    const customAlert = swal({
                        title: 'Warning',
                        text: `Are you sure you want to delete this Invoice? This action cannot be undone.`,
                        icon: 'warning',
                        closeOnClickOutside: false,
                        buttons: {
                            cancel: {
                                text: "cancel",
                                visible: true,
                                className: "",
                                closeModal: true,
                            },
                            confirm: {
                                text: "Confirm",
                                value: 'delete',
                                visible: true,
                                className: "btn-danger",
                            }
                        }
                    });
                    customAlert.then(value => {
                        if (value == 'delete') {
                            this.isLoading = true;
                            axios.delete('/delete/'+ invoice.id)
                                .then(response => {
                                    this.isLoading = false;
                                    this.invoices.splice(index, 1);
                                

                                }).catch(error => {
                                    if (error.response) {
                                        this.isLoading = false;
                                        this.$notify.error({
                                            title: 'Error',
                                            message: error.response.data.message
                                        });
                                    }
                                });

                        }
                    });
            }
        }
            
    })
</script>
{% endblock %}

